# Set your colours here.
# You can find the codes here: http://www.ibm.com/developerworks/library/l-tip-prompt/#h1
mainColour=33
infoColour=32

# Setting colour codes for readability
mainColour="\[\e[${mainColour}m\]"
infoColour="\[\e[${infoColour}m\]"

# Force update the tab/window title
titleChange="\[\e]0;\u@\h: \w\a\]"

# If running in a Screen session, display the screen name.
if [ ! -z "${STY-}" ]; then
  screenName=`echo $STY | sed -E 's/^[0-9]+[.]//'`
  screenName=":${screenName}"
fi

# Coloured prompt that includes the current git branch.
export PS1="\n${titleChange}${mainColour}[\u@${infoColour}\h${screenName}${mainColour}, \d ${infoColour}\w${mainColour}]\$(promptCurrentBranch)\n\t \$ \[\e[0m\]"

# Coloured prompt that DOES NOT include the current git branch.
# export PS1="\n${titleChange}${mainColour}[\u@${infoColour}\h${screenName}${mainColour}, \d ${infoColour}\w${mainColour}]\n\t \$ \[\e[0m\]"

# Used in the above to show the current Git branch.
function promptCurrentBranch {
        local branch=`currentBranch 2> /dev/null`
        if [ "$branch" != "" ]; then
                echo " (${branch})"
        fi
}

unset mainColour
unset infoColour


##############################################
# Helpful aliases

alias dmesg='dmesg --ctime'

# Make screen sessions easier
# Reattaches to the named screen (or default if no name given)
# if it exists, otherwise create a new screen with that name.
# Pass `ls` to list existing screens.
function screen() {
	cmd=/usr/bin/screen
	if [ -z "${1-}" ]; then
		echo "Attaching to default screen"
		$cmd -RAad -S default
	elif [ "$1" == "ls" ] || [ "$1" == "-ls" ]; then
		echo "Listing screens"
		$cmd -ls
	else
		name="$1"
		echo "Attaching to screen named ${name}"
		$cmd -RAad -S "$name"
	fi
}


##############################################
# Git Shortcuts

function currentBranch {
	git branch | grep '^\* ' | sed 's/[*] //'
}

function rebase {
	local branch=`currentBranch`

	local flag=''
	if [ "$1" == "keep-dates" ]; then
		flag="--committer-date-is-author-date"
	fi

	echo "Checking out master"
	git checkout master
	echo "Pulling"
	git pull
	echo "Checking out $branch"
	git checkout $branch
	echo "Starting rebase"
	git rebase $flag master
}

function rebase-upstream {
	local branch=`currentBranch`

	local flag=''
	if [ "$1" == "keep-dates" ]; then
		flag="--committer-date-is-author-date"
	fi

	master
	echo "Checking out $branch"
	git checkout $branch
	echo "Starting rebase"
	git rebase $flag master
}

function pull-upstream {
	local branch=`currentBranch`
	local upstream=`git remote | grep upstream`
	
	echo "Pulling from origin"
	git pull origin $branch
	
	if [ "$upstream" != "" ]; then
		echo "Pulling from upstream"
		git pull upstream $branch
	fi
}

function push {
	local branch=`currentBranch`
	local flag=''
	if [ "$1" != "" ]; then
		flag=$1
	fi
	echo "Pushing $branch to origin"
	git push $flag origin $branch
}

function merge {
	local branch=`currentBranch`
	echo "Checking out master"
	git checkout master
	echo "Pulling"
	git pull
	echo "Checking out $branch"
	git checkout $branch
	echo "Starting merge"
	git merge master
}

function merge-upstream {
	local branch=`currentBranch`
	master
	echo "Checking out $branch"
	git checkout $branch
	echo "Starting merge"
	git merge master
}

function master {
	echo "Checking out master"
	git checkout master
	echo "Pulling"
	pull-upstream
}

alias continue-rebase="git rebase --continue"
alias status="git status"
alias s="status"
alias diff="git diff"
alias d="diff"
alias add="git add"
alias a="add"
alias commit="git commit"
alias checkout="git checkout"
alias co="checkout"


##############################################
# Path functions
# Add a directory to $PATH, but only if it
# doesn't already exist.

function addToPathEnd() {
	exists=`echo $PATH | grep "$1"`
	if [ -z "$exists" ]; then
		export PATH="$PATH:$1"
	fi
}

function addToPath() {
	exists=`echo $PATH | grep "$1"`
	if [ -z "$exists" ]; then
		export PATH="$1:$PATH"
	fi
}

# addToPath $HOME/bin
# Add these to the end so they can't preempt an existing command
# addToPathEnd $HOME/lib/node-latest/bin
# addToPathEnd ./node_modules/.bin

